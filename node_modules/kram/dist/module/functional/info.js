'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

exports.default = function (app) {
    var infoPlugin = new Info();

    return function () {
        app.module.plugin.register('info', infoPlugin);
    };
};

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INFO_REGEX = /^(.+?[:：].+?\r?\n)+(-+\r?\n)/mg; /**
                                                    * @file 获取文章信息
                                                    * @author tanglei (tanglei02@baidu.com)
                                                    */

var Info = function () {
    function Info() {
        (0, _classCallCheck3.default)(this, Info);
    }

    (0, _createClass3.default)(Info, [{
        key: 'apply',
        value: function apply(on, app) {
            var map = new Map();

            var _app$STAGES = app.STAGES,
                BEFORE_PARSE = _app$STAGES.BEFORE_PARSE,
                CREATE_DOC_STORE_OBJECT = _app$STAGES.CREATE_DOC_STORE_OBJECT;


            on(BEFORE_PARSE, function (md, options) {
                return md.replace(INFO_REGEX, function (str) {

                    // 如果文章开头存在：
                    // a: 1
                    // b: 2
                    // ------
                    //
                    // 这样的类似结构，则将这些数据提取出来作为文档相关数据

                    var info = str.split('\n').filter(function (line) {
                        return !/^\s+$/.test(line);
                    }).map(function (line) {
                        return line.match(/^(.+?)[:：](.*)/);
                    }).filter(function (match) {
                        return match != null;
                    }).reduce(function (res, match) {
                        res[match[1].trim()] = match[2].trim();
                        return res;
                    }, {});

                    map.set(options.path, info);
                });
            });

            on(CREATE_DOC_STORE_OBJECT, function (obj) {
                var info = map.get(obj.path);
                if (info) {
                    obj.info = info;
                } else if (obj.chapters) {
                    obj.info = {
                        title: obj.chapters[0].text
                    };
                } else {
                    obj.info = {
                        title: _path2.default.basename(obj.path, _path2.default.extname(obj.path))
                    };
                }

                return obj;
            });
        }
    }]);
    return Info;
}();