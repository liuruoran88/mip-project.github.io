'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

exports.default = function (app) {
    var options = void 0;
    var languages = {};

    var hler = {
        get default() {
            return app.default.config.highlight;
        },

        set options(val) {
            if (!val) {
                return;
            }

            options = Object.assign({}, options, val);
            _highlight2.default.configure(options);
        },

        get options() {
            return options;
        },

        /**
         * 添加语言
         *
         * @param {...Array} args (name, fn) Or ({name: fn})
         * @return {undefined} undefined
         */
        addLanguage: function addLanguage() {
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            if (args.length === 1 && (0, _utils.is)(Object, args[0])) {
                return (0, _utils.each)(args[0], hler.addLanguage);
            }

            var _args = (0, _slicedToArray3.default)(args, 2),
                name = _args[0],
                fn = _args[1];

            if (languages[name]) {
                return;
            }

            languages[name] = fn;
            _highlight2.default.registerLanguage(name, fn);
        },


        get languages() {
            return languages;
        },

        /**
         * 对 highlight.js 的高亮方法做个封装
         *
         * @param {string} code 代码块
         * @param {string} language 高亮的语言
         * @return {string} 高亮好的代码块
         */
        highlight: function highlight(code, language) {
            if (_highlight2.default.getLanguage(language)) {
                try {
                    return _highlight2.default.highlight(language, code).value;
                } catch (e) {
                    // auto 的染色都是有问题的 还不如不染了
                    app.logger.error('[kram][highlight] error in highlight lang=' + language + ':');
                }
            }

            return (0, _utils.encodeTag)(code);
        }
    };

    app.addModule('highlighter', function () {
        return hler;
    });

    return function () {
        var _Object$assign = Object.assign({}, hler.default, app.config.highlight),
            options = _Object$assign.options,
            languages = _Object$assign.languages;

        hler.options = options;
        hler.addLanguage(languages);
    };
};

var _highlight = require('highlight.js');

var _highlight2 = _interopRequireDefault(_highlight);

var _utils = require('../../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }