'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RENDER_NAMES = exports.ORIGIN_RENDER = undefined;

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

exports.default = function (app) {
    var methods = {};
    var renderer = new _marked2.default.Renderer();
    var hookOptions = void 0;

    var module = {
        get methods() {
            return methods;
        },

        get renderer() {
            return renderer;
        },

        /**
         * 将 marked 的 renderer 的每个处理函数都包上事件钩子
         *
         * @param {...Array} args (name, fn) or ({name: val})
         */
        setRenderer: function setRenderer() {
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            if (args.length === 2) {
                var _args = (0, _slicedToArray3.default)(args, 2),
                    name = _args[0],
                    fn = _args[1];

                if (!(0, _utils.contain)(RENDER_NAMES, name)) {
                    return;
                }

                methods[name] = fn;

                renderer[name] = function () {
                    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                        args[_key2] = arguments[_key2];
                    }

                    var html = fn.apply(renderer, args);
                    var options = Object.assign({ args: args }, hookOptions);
                    html = app.module.hook.execSync(_stage.RENDER_PREFIX + name, html, options);
                    return html;
                };
            } else {
                (0, _utils.each)(args[0], module.setRenderer);
            }
        },


        set hookOptions(opts) {
            hookOptions = opts;
        }
    };

    app.addModule('renderer', function () {
        return module;
    });
};

var _marked = require('marked');

var _marked2 = _interopRequireDefault(_marked);

var _utils = require('../../utils');

var _stage = require('../hook/stage');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ORIGIN_RENDER = exports.ORIGIN_RENDER = Object.assign(
/** @lends marked.Renderer.prototype */
{}, _marked2.default.Renderer.prototype); /**
                                           * @file marked.js 默认配置文件
                                           * @author tanglei (tanglei02@baidu.com)
                                           */

var RENDER_NAMES = exports.RENDER_NAMES = Object.keys(ORIGIN_RENDER);